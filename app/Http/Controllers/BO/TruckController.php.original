<?php

namespace App\Http\Controllers\BO;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class TruckController extends Controller
{
    /**
     * Display a listing of trucks with status filtering.
     */
    public function index(Request $request)
    {
        $status = $request->input('status', 'all');
        
        // Mock data - in real app, would filter from database
        $allTrucks = [
            ['id' => 1, 'code' => 'C001', 'status' => 'active', 'franchisee' => 'Paris Nord', 'last_maintenance' => '2024-08-15', 'next_maintenance' => '2024-11-15'],
            ['id' => 2, 'code' => 'C002', 'status' => 'maintenance', 'franchisee' => 'Lyon Centre', 'last_maintenance' => '2024-08-20', 'next_maintenance' => '2024-08-30'],
            ['id' => 3, 'code' => 'C003', 'status' => 'active', 'franchisee' => 'Marseille Sud', 'last_maintenance' => '2024-08-10', 'next_maintenance' => '2024-11-10'],
            ['id' => 4, 'code' => 'C004', 'status' => 'inactive', 'franchisee' => 'Toulouse Nord', 'last_maintenance' => '2024-07-20', 'next_maintenance' => '2024-10-20'],
            ['id' => 5, 'code' => 'C005', 'status' => 'active', 'franchisee' => 'Bordeaux Est', 'last_maintenance' => '2024-08-22', 'next_maintenance' => '2024-11-22'],
        ];

        // Filter trucks based on status
        $trucks = $status === 'all' ? $allTrucks : 
            array_filter($allTrucks, fn($truck) => $truck['status'] === $status);

        // Calculate statistics
        $stats = [
            'total' => count($allTrucks),
            'active' => count(array_filter($allTrucks, fn($t) => $t['status'] === 'active')),
            'maintenance' => count(array_filter($allTrucks, fn($t) => $t['status'] === 'maintenance')),
            'inactive' => count(array_filter($allTrucks, fn($t) => $t['status'] === 'inactive')),
        ];

        return view('bo.trucks.index', compact('trucks', 'stats', 'status'));
    }

    /**
     * Display the specified truck with tabs (deployments, maintenance).
     */
    public function show(string $id)
    {
        // Mock data
        $truck = [
            'id' => $id,
            'code' => 'C001',
            'status' => 'active',
            'franchisee' => 'Paris Nord',
            'franchisee_email' => 'franchise.parisnord@drivncook.fr',
            'model' => 'Food Truck Pro 2023',
            'license_plate' => 'AB-123-CD',
            'purchase_date' => '2023-03-15',
            'warranty_end' => '2025-03-15',
            'deployments' => [
                ['id' => 1, 'date' => '2024-08-27', 'location' => 'Place de la République', 'revenue' => 850, 'status' => 'completed'],
                ['id' => 2, 'date' => '2024-08-26', 'location' => 'Gare du Nord', 'revenue' => 920, 'status' => 'completed'],
                ['id' => 3, 'date' => '2024-08-28', 'location' => 'Châtelet-Les Halles', 'revenue' => 0, 'status' => 'scheduled'],
            ],
            'maintenance' => [
                ['id' => 1, 'date' => '2024-08-15', 'type' => 'Révision générale', 'cost' => 1200, 'status' => 'completed', 'technician' => 'Garage Central'],
                ['id' => 2, 'date' => '2024-08-25', 'type' => 'Changement pneus', 'cost' => 450, 'status' => 'scheduled', 'technician' => 'Pneus Service'],
                ['id' => 3, 'date' => '2024-09-10', 'type' => 'Contrôle technique', 'cost' => 85, 'status' => 'pending', 'technician' => 'CT Auto'],
            ],
        ];

        return view('bo.trucks.show', compact('truck'));
    }

    /**
     * Schedule a new deployment for the truck.
     */
    public function scheduleDeployment(Request $request, string $id)
    {
        $request->validate([
            'date' => 'required|date|after:today',
            'location' => 'required|string|max:255',
            'duration' => 'required|integer|min:1|max:12',
            'notes' => 'nullable|string|max:500'
        ]);

        // In real app: Check truck availability, create deployment record
        
        return redirect()
            ->route('bo.trucks.show', $id)
            ->with('success', 'Déploiement programmé avec succès pour le ' . $request->input('date'));
    }

    /**
     * Schedule maintenance for the truck.
     */
    public function scheduleMaintenance(Request $request, string $id)
    {
        $request->validate([
            'date' => 'required|date|after:today',
            'type' => 'required|string|max:255',
            'technician' => 'required|string|max:255',
            'estimated_cost' => 'nullable|numeric|min:0',
            'description' => 'nullable|string|max:500'
        ]);

        // In real app: Create maintenance record, potentially block truck
        
        return redirect()
            ->route('bo.trucks.show', $id)
            ->with('success', 'Maintenance programmée avec succès pour le ' . $request->input('date'));
    }

    /**
     * Update truck status (active, maintenance, inactive).
     */
    public function updateStatus(Request $request, string $id)
    {
        $request->validate([
            'status' => 'required|in:active,maintenance,inactive',
            'reason' => 'nullable|string|max:500'
        ]);

        $newStatus = $request->input('status');
        $reason = $request->input('reason');

        // In real app: Update database, create status log, notify franchisee if needed

        $statusLabels = [
            'active' => 'actif',
            'maintenance' => 'en maintenance', 
            'inactive' => 'inactif'
        ];

        return redirect()
            ->route('bo.trucks.show', $id)
            ->with('success', "Statut du camion mis à jour : {$statusLabels[$newStatus]}");
    }

    /**
     * Generate truck utilization report.
     */
    public function utilizationReport(Request $request)
    {
        $period = $request->input('period', 'current_month');
        
        // Mock utilization data
        $utilizationData = [
            'period' => $period,
            'total_trucks' => 5,
            'average_utilization' => 78.5,
            'total_deployments' => 156,
            'total_revenue' => 142350, // centimes
            'by_truck' => [
                ['code' => 'C001', 'deployments' => 22, 'utilization' => 85.2, 'revenue' => 18750],
                ['code' => 'C002', 'deployments' => 18, 'utilization' => 72.1, 'revenue' => 15200],
                ['code' => 'C003', 'deployments' => 25, 'utilization' => 89.3, 'revenue' => 21400],
                ['code' => 'C004', 'deployments' => 15, 'utilization' => 65.8, 'revenue' => 12850],
                ['code' => 'C005', 'deployments' => 20, 'utilization' => 78.9, 'revenue' => 17100],
            ],
            'maintenance_impact' => [
                'days_in_maintenance' => 12,
                'revenue_lost' => 8500,
                'avg_maintenance_duration' => 2.4
            ]
        ];

        return view('bo.trucks.utilization_report', compact('utilizationData'));
    }
}
