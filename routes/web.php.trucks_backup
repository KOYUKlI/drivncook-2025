<?php

use App\Http\Controllers\BO\ApplicationController;
use App\Http\Controllers\BO\DashboardController as BODashboardController;
use App\Http\Controllers\BO\FranchiseeController;
use App\Http\Controllers\BO\PurchaseOrderController;
use App\Http\Controllers\BO\TruckController;
use App\Http\Controllers\FO\DashboardController as FODashboardController;
use App\Http\Controllers\FO\ReportController;
use App\Http\Controllers\FO\SaleController;
use App\Http\Controllers\ProfileController;
use App\Http\Controllers\Public\FranchisePageController;
use App\Http\Controllers\Public\HomeController;
use App\Services\PdfService;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\Storage;
use Laravel\Cashier\Http\Controllers\WebhookController;

Route::post('/stripe/webhook', [WebhookController::class, 'handleWebhook'])->name('cashier.webhook');

Route::get('/reports/demo', function (PdfService $pdf) {
    $path = 'reports/demo-'.now()->format('Ym').'.pdf';
    $pdf->monthlySales([
        'franchisee' => ['name' => 'Franchise Paris'],
        'month' => now()->month, 'year' => now()->year,
        'total' => 50.00,
        'lines' => [
            ['date' => now()->toDateString(), 'item' => 'Burger', 'qty' => 10, 'price' => 5.00, 'amount' => 50.00],
        ],
    ], $path);

    return response()->download(Storage::disk('public')->path($path));
})->middleware('auth');

// Public routes
Route::get('/', [HomeController::class, 'index'])->name('home');
Route::get('/devenir-franchise', [FranchisePageController::class, 'show'])->name('public.franchise');

// Dashboard redirect route
Route::get('/dashboard', function () {
    $user = auth()->user();

    if ($user->hasRole(['admin', 'warehouse', 'fleet', 'tech'])) {
        return redirect()->route('bo.dashboard');
    }

    if ($user->hasRole('franchisee')) {
        return redirect()->route('fo.dashboard');
    }

    return redirect()->route('home');
})->middleware(['auth', 'verified'])->name('dashboard');

// Authenticated routes
Route::middleware(['auth', 'verified'])->group(function () {
    // Back Office routes (admin, warehouse, fleet, tech)
    Route::middleware('role:admin|warehouse|fleet|tech')->prefix('bo')->name('bo.')->group(function () {
        Route::get('/dashboard', [BODashboardController::class, 'index'])->name('dashboard');

        // Franchisees management (admin only)
        Route::middleware('role:admin')->group(function () {
            Route::resource('franchisees', FranchiseeController::class);
            Route::resource('applications', ApplicationController::class)->only(['index', 'show']);
            Route::post('applications/{id}/prequalify', [ApplicationController::class, 'prequalify'])->name('applications.prequalify');
            Route::post('applications/{id}/interview', [ApplicationController::class, 'interview'])->name('applications.interview');
            Route::post('applications/{id}/approve', [ApplicationController::class, 'approve'])->name('applications.approve');
            Route::post('applications/{id}/reject', [ApplicationController::class, 'reject'])->name('applications.reject');
        });

        // Trucks management (admin, fleet)
        Route::middleware('role:admin|fleet')->group(function () {
            Route::resource('trucks', TruckController::class)->only(['index', 'show']);
            Route::post('trucks/{id}/schedule-deployment', [TruckController::class, 'scheduleDeployment'])->name('trucks.schedule-deployment');
            Route::post('trucks/{id}/schedule-maintenance', [TruckController::class, 'scheduleMaintenance'])->name('trucks.schedule-maintenance');
            Route::patch('trucks/{id}/status', [TruckController::class, 'updateStatus'])->name('trucks.update-status');
            Route::get('trucks/reports/utilization', [TruckController::class, 'utilizationReport'])->name('trucks.utilization-report');
        });

        // Purchase orders (admin, warehouse)
        Route::middleware('role:admin|warehouse')->group(function () {
            Route::resource('purchase-orders', PurchaseOrderController::class)->only(['index', 'show']);
            Route::post('purchase-orders/{id}/validate-compliance', [PurchaseOrderController::class, 'validateCompliance'])->name('purchase-orders.validate-compliance');
            Route::post('purchase-orders/{id}/update-ratio', [PurchaseOrderController::class, 'updateRatio'])->name('purchase-orders.update-ratio');
            Route::post('purchase-orders/{id}/recalculate', [PurchaseOrderController::class, 'recalculate'])->name('purchase-orders.recalculate');
            Route::get('purchase-orders/reports/compliance', [PurchaseOrderController::class, 'complianceReport'])->name('purchase-orders.compliance-report');
        });
    });

    // Front Office routes (franchisees)
    Route::middleware('role:franchisee')->prefix('fo')->name('fo.')->group(function () {
        Route::get('/dashboard', [FODashboardController::class, 'index'])->name('dashboard');
        Route::resource('sales', SaleController::class)->only(['index', 'create', 'store']);
        Route::get('/reports', [ReportController::class, 'index'])->name('reports.index');
    });

    // Profile routes
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
});

require __DIR__.'/auth.php';

// Routes de test temporaires - à supprimer après vérification
Route::get('/test-admin', function() { 
    $user = App\Models\User::where('email', 'admin@local.test')->first(); 
    auth()->login($user); 
    return redirect()->route('bo.dashboard'); 
})->name('test.admin');

Route::get('/test-franchisee', function() { 
    $user = App\Models\User::where('email', 'fr@local.test')->first(); 
    auth()->login($user); 
    return redirect()->route('fo.dashboard'); 
})->name('test.franchisee');
